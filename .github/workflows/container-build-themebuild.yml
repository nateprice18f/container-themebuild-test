name: Builds theme container

on:
  push:
    branches: [ container-build-themebuild ]
  pull_request:
    branches: [ container-build-themebuild ]

jobs:  
  run-composer:
    name: Start container image
    runs-on: ubuntu-latest
    steps:
     - name: checkout
       uses: actions/checkout@v3
       
     - name: make dir
       run:  mkdir composer
       
     - name: Start Container 
       run: docker run -d --name composer natep18f/container-themebuild-test:container-build-composer
       
     - name: Copy files from container to host
       run: |
        docker cp composer:/var/www ./composer

     - name: zip
       run: |
         zip compose-theme.zip ./composer/*
       
     - name: Upload Artifact
       uses: actions/upload-artifact@v2
       with:
         name: compose-theme
         path: compose-theme.zip
         
  build-theme:
    needs: run-composer
    name: Uses artifacts to create theme-builder container
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
         path: ./compose-theme/www
          
      - name: Generate Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            natep18f/container-themebuild-test
          tags: |
            type=ref,event=branch
            type=semver,pattern={{major}}.{{minor}}
          flavor: |
            latest=false
  
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1

      - name: Setup Docker Buildx 
        uses: docker/setup-buildx-action@v2.5.0
        
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      
      - name: Build and push image to Docker Hub
        uses: docker/build-push-action@v4
        with:
          context: ./compose-theme/www
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64, linux/arm64
