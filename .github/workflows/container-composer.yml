name: Creates Composer Container from upstream 

on:
  push:
    branches: [ container-build-composer ]
  pull_request:
    branches: [ container-build-composer ]

jobs:
  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Generate Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            natep18f/container-themebuild-test
          tags: |
            type=ref,event=branch
            type=semver,pattern={{major}}.{{minor}}
          flavor: |
            latest=false

      #- name: Lint Dockerfile
      #  uses: hadolint/hadolint-action@v3.1.0
      #  with:
      #    dockerfile: Dockerfile
  
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1

      - name: Setup Docker Buildx 
        uses: docker/setup-buildx-action@v2.5.0
        
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      
      - name: Build and push image to Docker Hub
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64, linux/arm64
          
      - name: Tar files
        run: tar -cvf composer-www-package.tar var/www/web/themes
        
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: composer-www-package
          path: composer-www-package.tar
        
      #- name: Package Composer Output
      #  uses: actions/upload-artifact@v3
      #  with:
      #    name: composer-www-package
      #    path: /var/**/
      
      - name: Security scan
        uses: anchore/scan-action@v3
        with:
          image-reference: "ubuntu:latest"
          fail-build: true
